openapi: 3.1.0
info:
  title: Documento Estatico de OpenApi para Books
  description: Documentacion para Recursos de Books
  version: "1.0"

servers:
  - url: http://localhost:7070/
    description: Visualizacion de la Documentacion en Modo Desarrollador

paths:
  /books:
    get:
      summary: Obtener todos los Books
      description: Obtiene la lista de todos los Books.
      operationId: findAll
      responses:
        "200":
          description: Lista de Books obtenida exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Book"
    post:
      summary: Crear un nuevo Book
      description: Crea un nuevo Book y guardarlo en la Base de Datos.
      operationId: create
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Book"
      responses:
        "201":
          description: Book creado exitosamente

  /books/{id}:
    get:
      summary: Obtener Book
      description: Obtiene un Book por Id.
      operationId: findById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Book encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Book"
        "500":
          description: Error interno en el servidor
    put:
      summary: Actualizar un Book
      description: Actualiza un Book existente por su Id.
      operationId: update
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Book"
      responses:
        "200":
          description: Book actualizado exitosamente
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Book"
        "404":
          description: Book no encontrado
    delete:
      summary: Eliminar un Book
      description: Eliminar un Book existente por su Id.
      operationId: delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Book eliminado exitosamente
        "404":
          description: Book no encontrado

components:
  schemas:
    Book:
      type: object
      properties:
        id:
          type: integer
        firstName:
          type: string
        lastName:
          type: string
